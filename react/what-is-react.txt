Fast, functional, dynamic user interfaces

SPA's -> single page applications
index.html

React competency:
  state management
  props
  component lifecycle
  componenet architecture

JSX
Virtual Dom 

const tree = {
  type :
}

Tools: 
  - VS Code / CRA - create-react-app toolchain √
  - Chrome react dev tools √
  - codesandbox.io
  - create react app https://create-react-app.dev/


test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});

TDD -> Test Driven Devolopment
BDD -> Behavior Driven Devolopment


REWATCH BITS:
4:12pm
4:45pm (about our current situation with finals and stuff)

JSX allows us to avoid doing stuff like this 
  const helloHeader= React.createElement("h1", null, "Hello Codesandbox)
  const appDiv= React.createElement("div", {className: "App"}, helloHeader)
  react.createElement("div", {className: "App"}
    React.createElement("h1", null, "Hello codesandbox")
    React.createElement{"h2", null, "Start editing to see some magic happen!"})


JSX is what reads the language to append to the DOM
JSX is syntanxic sugar for createElement

